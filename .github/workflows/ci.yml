name: Go CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23.2

      - name: Install dependencies
        run: go mod tidy

      - name: Run tests
        run: go test ./...

      - name: Build the project
        run: go build -v ./...

      - name: Fetch all tags
        run: git fetch --tags --force


      - name: Check latest tag
        run: |
          latest_tag=$(git tag -l "v*" | sort -V | tail -n 1)
          echo "Latest tag: $latest_tag"
      
      

      - name: Create new tag if not exists
        run: |
         latest_tag=$(git tag -l "v*" | sort -V | tail -n 1)
         if [ -z "$latest_tag" ]; then
         echo "No tags found, creating v1.0.0"
          git tag v1.0.0
         git push origin v1.0.0
         fi


      - name: Upload new asset to release
        uses: softprops/action-gh-release@v1
        with:
           files: example.txt
        env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: steps.check_latest_tag.outputs.latest_tag != ''
       

  release:
    runs-on: ubuntu-latest
    needs: test-and-build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up GitHub CLI
        run: |
          curl -fsSL https://cli.github.com/packages/githubcli-archive.key | sudo tee /etc/apt/trusted.gpg.d/github.asc > /dev/null
          sudo apt update
          sudo apt install gh

      - name: Create or Update Release
        run: |
            latest_tag=$(git tag -l "v*" | sort -V | tail -n 1)
            if [ -z "$latest_tag" ]; then
              echo "No tags found. Creating v1.0.0 release."
              gh release create v1.0.0 example.txt --repo $GITHUB_REPOSITORY
            else
              echo "Using latest tag: $latest_tag"
              gh release upload "$latest_tag" example.txt --repo $GITHUB_REPOSITORY --clobber
            fi
        env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
